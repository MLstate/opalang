var simplesmtp = require("simplesmtp");
var nodemailer = require("nodemailer");

var debug = false

/** @externType continuation('a) */
/** @externType caml_list('a) */
/** @externType caml_tuple_2('a,'b) */
/** @externType caml_tuple_4('a,'b,'c,'d) */
/** @externType SSL.secure_type */

/** @opaType list('a) */
/** @opaType tuple_2('a, 'b) */
//'

/** @module SmtpClient */

  /** @opaType Email.send_status */

  /**
   *  @register {string, string, \
                 caml_list(string), \
                 string, string, string, \
                 string, string, string, \
                 caml_list(caml_tuple_4(string,string,string,string)), \
                 caml_list(caml_tuple_2(string,string)), \
                 opa[option(string)], opa[option(string)], opa[option(int)],\
                 opa[option(string)], opa[option(string)], opa[option(string)],\
                 opa[bool], opa[option(SSL.secure_type)], \
                 (opa[email_send_status], continuation(opa[void]) -> void), \
                 continuation(opa[void]) -> void}
   *  @cpsBypass
   */
  function mail_send_fun(mfrom,mfrom_address_only,mdst,mto,mcc,mbcc,subject,mdata,html,files,custom_headers,via,addr,port,auth,user,pass,dryrun,secure_type,callback,k) {

      var attachments = files.map(function(file) {
	  if (file.f3 == "base64") contents = new Buffer(file.f4, 'base64')
	  else contents = file.f4
	  return {
	      fileName: file.f1,
	      contents: contents,
	      contentType: file.f2
	  }
      });

      var headers = empty_constructor();
      custom_headers.forEach(function(header) {
	  if (header.f1 != "size")
      	      add_field(headers, header.f1, header.f2);
      })

      var mailOptions = {
	  from: mfrom, // sender address
	  to: mto, // list of receivers
	  cc: mcc,
	  bcc: mbcc,
	  subject: subject, // Subject line
	  text: mdata, // plaintext body
	  html: html, // html body
	  headers: headers,
	  attachments: attachments
      };

      var smtpTransport;
      if (addr.none) {
	  // Create a Sendmail transport object
	  smtpTransport = nodemailer.createTransport("Sendmail", {
	      args: ["-t -f "+mfrom_address_only]
	  });
      } else {
	  var options = {
	      host: option2default(via, addr.some),
	      port: option2default(port, 25),
	      secureConnection: !(secure_type.none),
	      debug: debug};
	  if (!auth.none) {
	      options.auth = {
		  user: option2default(user, ""),
		  pass: option2default(pass, "")
	      };
	  }
	  smtpTransport = nodemailer.createTransport("SMTP", options);
      }

      if (dryrun) {
	  if (smtpTransport) callback({ok:""}, ccont(k, function(){}))
	  else callback({error:""}, ccont(k, function(){}))
      } else {
	  // send mail with defined transport object
	  smtpTransport.sendMail(mailOptions, function(error, response){
	      if (error) {
		  console.log(error);
		  callback({error:error}, ccont(k, function(){}))
	      } else {
		  console.log("Message sent: " + response.message);
		  callback({ok:""}, ccont(k, function(){}))
	      }
	      smtpTransport.close();
	  });
      }

      return_(k, js_void);
      return;

  } // End register


/** @endModule */

