(*
    Copyright Â© 2011, 2012 MLstate

    This file is part of Opa.

    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*)

(** Configuration of the build system
    The .ml file is generated by the ./configure script *)

(** the installation prefix (also known as MLSTATELIBS from many places) *)
val prefix : string

(** the installation library directory *)
val lib_dir : string

(** the base directory of external ocaml libraries *)
val ocamllib : string

(** the ocamlopt compiler to use *)
val ocamlopt : string

(** related ocamlbuild tool *)
val ocamlbuild : string

val ocamlbuild_flags : string

(** full name of the camlp4o and camlp4orf executables *)
val camlp4o : string
val camlp4orf : string

(** are we compiling in release or debug mode ? In release mode,
    assertions and debug variables are disabled *)
val is_release : bool

(** the target OS type *)
type os = Linux | Mac | Win32 | Cygwin | FreeBSD
val os : os

(** the name of the  GNU make binary, gmake on fBSD, make on other platforms *)
val makebinary : string

(** the installation directory of external libraries, as in the ocamlopt '-I'
    command-line option ; None if no extra include directory is needed *)
module Libdir : sig
  val camlzip_name : string (** Sometimes "zip", sometimes "camlzip" *)
  val camlzip : string option
  val graph : string option
  val ulex : string option
end

(** Common file extensions (on Unices, resp. .a, .o and .so) *)
val ext_lib : string
val ext_obj : string
val ext_shared : string

(** More nclude directories to give to the server *)
val more_server_include_dir : string list
